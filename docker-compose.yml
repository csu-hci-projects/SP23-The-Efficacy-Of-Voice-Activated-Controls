version: '3.8'

services:
  voice_control_db:
    image: postgres:13
    restart: always
    container_name: voice_control_db
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
      - PGDATA=/var/lib/postgresql/data
    user: postgres
    ports:
      - '5432:5432'
    volumes:
      # - voice_control_db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  voice_control_frontend:
    container_name: voice_control_frontend
    build:
      context: .
      # prod build - compiles and builds a minimized form on nginx
      # dockerfile: frontend-prod.Dockerfile
      # dev/test uses ng serve on local cli
      dockerfile: frontend.Dockerfile
    volumes:
      - './frontend:/frontend'
      - '/frontend/node_modules'
      # - './ssl:/etc/nginx/ssl'
    ports:
      # prod port binding
      # - '80:80'
      # - '443:443'
      # dev port binding
      - '4200:4200'
  voice_control_api:
    restart: always
    build:
      context: .
      dockerfile: api.Dockerfile
    container_name: voice_control_api
    user: root
    volumes:
      - ./api:/api
      # - ./ssl:/ssl
    entrypoint: watchmedo auto-restart --recursive --pattern="*.py" --directory="." python voice_control_api.py
    ports:
      - '5000:5000'
    depends_on:
      - voice_control_db
volumes:
  voice_control_db:
    driver: local
